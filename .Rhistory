library(readr)
library(lme4)
library(ggplot2)
library(readr)
library(lme4)
library(ggplot2)
#library(dplyr)
library(tidyr)
library(psych)
library(gdata)
library(R.matlab)
library(xtable)
library(Hmisc)
library(nnet)
library(reshape2)
library(ggbiplot)
library(corrplot)
library(lsmeans)
library(factoextra)
library(ggfortify)
library(readxl)
library(linbin)
library(MASS)
library(lattice)
library(fastICA)
library(plotly)
library(stargazer)
setwd("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/")
d <- read_excel("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/SAPAP3 cFos cohort lever press timestamp reversal day 1.xlsx")
g <- read_excel("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/Reversal cFos cohort blind.xlsx")
cfos <- read_csv("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/cFos_040618_finalmice.csv")
names(cfos)[names(cfos)=="ID"] <- "id"
names(cfos)[names(cfos)=="correct"] <- "tot_correct"
names(cfos)[names(cfos)=="incorrrect"] <- "tot_incorrect"
names(cfos)[names(cfos)=="Genotype"] <- "genotype01"
names(cfos)[names(cfos)=="NAc S"] <- "NAcS"
names(cfos)[names(cfos)=="NAc C"] <- "NAcC"
cshort <- cfos[,c(1:2,7:16)]
cshort <- as.data.frame(cshort)
t_cfos <- melt(cshort,id.vars = c("id","genotype01"))
names(t_cfos)[names(t_cfos)=="value"] <- "cfos"
names(t_cfos)[names(t_cfos)=="variable"] <- "region"
# generate binned data. binsize is in 0.1 sec
d$id <- d$`subject ID`
d$corr <- d$`Correct lever press`
d$inc <- d$`Incorrect lever press`
d <- d[,4:6]
d[d==0] <- NA
View(d)
ids <- unique(d$id)
describe(d$corr)
describe(d$inc)
start <- 0
binsize <- 40
maxbin <- 16800
#censor data for mice that completed training in <30 minutes
c <- data.frame()
for (id in ids)
## the if condition that sets a different end for some ids, or just set end to equal the time of last response
{end <- max(c(max(d$inc[d$id==id]),max(na.omit(d$corr[d$id==id]))))
# make sure we are not removing idle time at the end of sessions for mice with full session durations
if (end>maxbin) {end <- 18000}
bins <- seq(start,end,binsize)
t=cut(d$corr[d$id==id],c(bins), labels = FALSE)
b <- table( factor(t, levels = 1:length(bins)-1))
b <- as.data.frame(b)
b$id <- id
names(b)[names(b)=="Var1"] <- "time"
names(b)[names(b)=="Freq"] <- "corr"
tinc=cut(d$inc[d$id==id],c(bins), labels = FALSE)
i <- table( factor(tinc, levels = 1:length(bins)-1))
i <- as.data.frame(i)
b$inc <- i$Freq
c <- rbind(c,b)
}
c <- c[c$time!="0",]
c$t.ord <- as.ordered(c$time)
c$t.num <- as.numeric(c$time)
# all together
bdf <- merge(c.all,g)
#View(bdf)
names(cfos)[names(cfos)=="grooming time"] <- "grooming.time"
# merge with cell counts
hdfc <- merge(hdf,cfos)
bdfc <- merge(bdf,cfos)
# corr/inc separated
hdf <- merge(c,g) # horizontal data frame
#View(hdf)
bdf <- merge(c.all,g)
View(c.all)
c.all <- melt(c,id.vars = c("id","time","t.num","t.ord"),value.name = "response", variable.name = "type")
names(c.all)[names(c.all)=="value"] <- "response"
names(c.all)[names(c.all)=="variable"] <- "type"
nbfit <- suppressWarnings(fitdistr(c.all$response, "negative binomial"))
nbfit$estimate
logLik(nbfit)
c.all$response <- as.numeric(c.all$response)
hdf <- merge(c,g) # horizontal data frame
#View(hdf)
# all together
bdf <- merge(c.all,g)
#View(bdf)
names(cfos)[names(cfos)=="grooming time"] <- "grooming.time"
# merge with cell counts
hdfc <- merge(hdf,cfos)
bdfc <- merge(bdf,cfos)
quick look at genotype
# correct
summary(mcorrg1 <- glm(corr ~ t.num*Genotype +  (1:id), family = negative.binomial(theta = theta.corr), data = hdf))
#incorrect
summary(mincg1 <- glm(inc ~ t.num*Genotype +  (1:id), family = negative.binomial(theta = theta.inc), data = hdf))
summary(lmc1 <- lm(cfos$tot_correct ~ cfos$genotype01))
summary(lmi1 <- lm(cfos$tot_incorrect ~ cfos$genotype01))
summary(lmg1 <- lm(log(cfos$grooming.time) ~ cfos$genotype01))
# calculate theta for both responses
theta.resp <- theta.ml(na.omit(c.all$response), mean(na.omit(c.all$response)), 972, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
summary(mrespg1 <- glm(response ~ 1 + t.num*type + type*Genotype +  (1:id), family = negative.binomial(theta = theta.resp), data = bdf))
car::Anova(mrespg1)
ls.respg1 <- lsmeans(mrespg1,"type", by = "Genotype")
plot(ls.respg1, type ~ response, horiz=F,ylab = "Response levels", xlab = "type")
summary(mrespg2 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + PrL*t.num*Genotype + PrL*type*Genotype + PrL*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg2)
View(cfos)
View(c.all)
View(hdf)
View(hdfc)
View(bdfc)
## LME on binned response data from Lizzie Manning and Suzanne Ahmari's free operant deterministic reversal experiment
library(readr)
library(lme4)
library(ggplot2)
#library(dplyr)
library(tidyr)
library(psych)
library(gdata)
library(R.matlab)
library(xtable)
library(Hmisc)
library(nnet)
library(reshape2)
library(ggbiplot)
library(corrplot)
library(lsmeans)
library(factoextra)
library(ggfortify)
library(readxl)
library(linbin)
library(MASS)
library(lattice)
library(fastICA)
library(plotly)
library(stargazer)
library(rio)
setwd("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/")
d <- read_excel("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/SAPAP3 cFos cohort lever press timestamp reversal day 1.xlsx")
g <- read_excel("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/Reversal cFos cohort blind.xlsx")
g$id <- g$`Physical Tag`
g <- g[,2:3]
cfos <- read_csv("/Users/Lizzie/Documents/GitHub/SAPAP3_reversal/cFos_040618_finalmice.csv")
names(cfos)[names(cfos)=="ID"] <- "id"
names(cfos)[names(cfos)=="correct"] <- "tot_correct"
names(cfos)[names(cfos)=="incorrrect"] <- "tot_incorrect"
names(cfos)[names(cfos)=="Genotype"] <- "genotype01"
names(cfos)[names(cfos)=="NAcS"] <- "NAcS"
names(cfos)[names(cfos)=="NAcC"] <- "NAcC"
View(cfos)
# make tall cfos
cshort <- cfos[,c(1:2,7:16)]
cshort <- as.data.frame(cshort)
t_cfos <- melt(cshort,id.vars = c("id","genotype01"))
View(t_cfos)
names(t_cfos)[names(t_cfos)=="value"] <- "cfos"
names(t_cfos)[names(t_cfos)=="variable"] <- "region"
summary(cm1 <- lm(cfos ~ region*genotype01, data = t_cfos))
anova(cm1)
d$id <- d$`subject ID`
d$corr <- d$`Correct lever press`
d$inc <- d$`Incorrect lever press`
d <- d[,4:6]
d[d==0] <- NA
View(d)
ids <- unique(d$id)
describe(d$corr)
describe(d$inc)
# end <- 18000
start <- 0
# binsize <- 1000
# try smaller bins:
binsize <- 40
maxbin <- 16800
c <- data.frame()
for (id in ids)
## Lizzie, here you can insert the if condition that sets a different end for some ids, or just set end to equal the time of last response
{end <- max(c(max(d$inc[d$id==id]),max(na.omit(d$corr[d$id==id]))))
# make sure we are not removing idle time at the end of sessions for those 5-6 mice
if (end>maxbin) {end <- 18000}
bins <- seq(start,end,binsize)
t=cut(d$corr[d$id==id],c(bins), labels = FALSE)
b <- table( factor(t, levels = 1:length(bins)-1))
b <- as.data.frame(b)
b$id <- id
names(b)[names(b)=="Var1"] <- "time"
names(b)[names(b)=="Freq"] <- "corr"
tinc=cut(d$inc[d$id==id],c(bins), labels = FALSE)
i <- table( factor(tinc, levels = 1:length(bins)-1))
i <- as.data.frame(i)
b$inc <- i$Freq
c <- rbind(c,b)
}
c <- c[c$time!="0",]
c$t.ord <- as.ordered(c$time)
c$t.num <- as.numeric(c$time)
# set up negative binomial models
# estimate overdispersion parameter theta
theta.corr <- theta.ml(c$corr, mean(c$corr), 513, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
theta.inc <- theta.ml(c$inc, mean(c$inc), 513, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
for correct presses
#summary(mcorr1 <- glm(corr ~ t.ord + (1:id), family = negative.binomial(theta = theta.corr), data = c))
summary(mcorr2 <- glm(corr ~ t.num + (1:id), family = negative.binomial(theta = theta.corr), data = c))
#anova(mcorr1,mcorr2)
# for incorrect presses
summary(minc1 <- glm(inc ~ t.num + (1:id), family = negative.binomial(theta = theta.corr), data = c))
# combine all responses into one variable with correct/incorrect as factor
c.all <- melt(c,id.vars = c("id","time","t.num","t.ord"),value.name = "response", variable.name = "type")
names(c.all)[names(c.all)=="value"] <- "response"
names(c.all)[names(c.all)=="variable"] <- "type"
View(c.all)
nbfit <- suppressWarnings(fitdistr(c.all$response, "negative binomial"))
nbfit$estimate
logLik(nbfit)
c.all$response <- as.numeric(c.all$response)
hdf <- merge(c,g) # horizontal data frame
#View(hdf)
View(hdf)
View(hdf)
bdf <- merge(c.all,g)
#View(bdf)
names(cfos)[names(cfos)=="grooming time"] <- "grooming.time"
# merge with cell counts
hdfc <- merge(hdf,cfos)
bdfc <- merge(bdf,cfos)
View(bdfc)
View(bdfc)
pdf("Log response curves by genotype gam.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(response + .1), color = type),data = bdf) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses (log)") +
stat_smooth(data=bdf, aes(x=t.num, y=log(response + .1), color = type), size=2, alpha=0.2, se=TRUE, method="loess") + geom_count(position = "jitter") +
facet_grid(Genotype ~ .)
dev.off()
pdf("Linear response curves by genotype gam.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=response, color = type),data = bdf) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) +
theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses") +
geom_count(position = "jitter") +
facet_grid(Genotype ~ .)
dev.off()
pdf("Log response curves by genotype gam combine responses1.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(response + .1)),data = bdf) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses (log)") +
stat_smooth(data=bdf, aes(x=t.num, y=log(response + .1)), size=1, alpha=0.2, se=TRUE, method="loess")
dev.off()
pdf("Log response curves by genotype gam combine responses1a.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(response + .1)),data = bdf) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses (log)") +
stat_smooth(data=bdf, aes(x=t.num, y=log(response + .1)), size=1, alpha=0.2, se=TRUE, method="loess")+ facet_grid(Genotype ~ .)
dev.off()
pdf("Log response curves by genotype gam combine responses1B.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(response + .1), color = Genotype),data = bdf) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses (log)") +
stat_smooth(data=bdf, aes(x=t.num, y=log(response + .1), color = Genotype), size=1, alpha=0.2, se=TRUE, method="loess")
dev.off()
pdf("Log response curves by genotype gam combine responses1inc.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(inc + .1), color = Genotype),data = hdf) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses (log)") +
stat_smooth(data=hdf, aes(x=t.num, y=log(inc + .1), color = Genotype), size=1, alpha=0.2, se=TRUE, method="loess")
dev.off()
pdf("Log response curves by genotype gam combine responses1corr.pdf", width=8, height=6)
ggplot(aes(x=t.num, y=log(corr + .1), color = Genotype),data = hdf) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Responses (log)") +
stat_smooth(data=hdf, aes(x=t.num, y=log(corr + .1), color = Genotype), size=1, alpha=0.2, se=TRUE, method="loess")
dev.off()
#  quick look at genotype
# correct
summary(mcorrg1 <- glm(corr ~ t.num*Genotype +  (1:id), family = negative.binomial(theta = theta.corr), data = hdf))
#incorrect
summary(mincg1 <- glm(inc ~ t.num*Genotype +  (1:id), family = negative.binomial(theta = theta.inc), data = hdf))
summary(lmc1 <- lm(cfos$tot_correct ~ cfos$genotype01))
summary(lmi1 <- lm(cfos$tot_incorrect ~ cfos$genotype01))
summary(lmg1 <- lm(log(cfos$grooming.time) ~ cfos$genotype01))
theta.resp <- theta.ml(na.omit(c.all$response), mean(na.omit(c.all$response)), 972, limit = 50, eps = .Machine$double.eps^.25, trace = FALSE)
summary(mrespg1 <- glm(response ~ 1 + t.num*type + type*Genotype +  (1:id), family = negative.binomial(theta = theta.resp), data = bdf))
summary(mrespg1 <- glm(response ~ t.num*type*Genotype +  (1:id), family = negative.binomial(theta = theta.resp), data = bdf))
car::Anova(mrespg1)
ls.respg1 <- lsmeans(mrespg1,"type", by = "Genotype")
plot(ls.respg1, type ~ response, horiz=F,ylab = "Response levels", xlab = "type")
summary(mrespg2 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + grooming.time*type + grooming.time*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg2)
summary(mrespg2 <- glm(response ~ t.num*type+ t.num*Genotype + type*Genotype + PrL*t.num*Genotype + PrL*type*Genotype + PrL*type*t.num +  (1:id), family = negative.binomial(theta = theta.resp), data = bdfc))
car::Anova(mrespg2)
hist(cfos$PrL)
mean(cfos$PrL)
stdev(cfos$PrL)
sd(cfos$PrL)
lsmip(mrespg2, PrL ~ type | Genotype, at = list(PrL = c(200,400,600)), ylab = "log(response rate)", xlab = "type ", type = "predicted" )
lsmip(mrespg2, PrL ~ Genotype | type, at = list(PrL = c(200,400,600)), ylab = "log(response rate)", xlab = "type ", type = "predicted" )
lsmip(mrespg2, PrL ~ t.num | type, at = list(PrL = c(200,400,600),t.num  = c(1,length(bins)/2, length(bins))), ylab = "log(response rate)", xlab = "time ", type = "predicted" )
ggplot(aes(x=t.num, y=corr, color = Genotype),data = hdf) + stat_smooth(size=2, alpha=0.1, method="loess", size = 1) + theme_bw(base_size=20) +
xlab("Time, 4s bins") + ylab("Correct responses") +
geom_count(position = "jitter")
ggplot( aes(x=t.num, y=inc, color = Genotype),data = hdf) + stat_smooth(size=2, alpha=0.1, method="loess",  size = 1) + theme_bw(base_size=20) +
xlab("Time, 4s bins") + ylab("Incorrect responses") +
geom_count(position = "jitter")
ggplot(aes(x=t.num, y=corr),data = c) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Correct responses") +
stat_smooth(data=c, aes(x=t.num, y=corr), size=0.4, alpha=0.1, se=FALSE, method="loess")
ggplot( aes(x=t.num, y=inc),data = c) + stat_smooth(size=2, alpha=0.2, method="gam", formula = y ~ s(x), size = 1) + theme_bw(base_size=20) + xlab("Time, 4s bins") + ylab("Incorrect responses") +
stat_smooth(data=c, aes(x=t.num, y=inc), size=0.4, alpha=0.1, se=FALSE, method="loess")
